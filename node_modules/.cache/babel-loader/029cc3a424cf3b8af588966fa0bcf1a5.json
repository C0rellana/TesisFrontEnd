{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Escritorio/PROYECTO/FrontEnd/src/views/UploadFile.jsx\";\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nfunction MyDropzone() {\n  var onDrop = useCallback(function (acceptedFiles) {\n    var reader = new FileReader();\n\n    reader.onabort = function () {\n      return console.log('file reading was aborted');\n    };\n\n    reader.onerror = function () {\n      return console.log('file reading has failed');\n    };\n\n    reader.onload = function () {\n      // Do whatever you want with the file contents\n      var binaryStr = reader.result;\n      console.log(binaryStr);\n    };\n\n    acceptedFiles.forEach(function (file) {\n      return reader.readAsBinaryString(file);\n    });\n  }, []);\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive;\n\n  return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Drag 'n' drop some files here, or click to select files\"));\n}\n\nexport default MyDropzone;","map":{"version":3,"sources":["/home/carlos/Escritorio/PROYECTO/FrontEnd/src/views/UploadFile.jsx"],"names":["React","useCallback","useDropzone","MyDropzone","onDrop","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","forEach","file","readAsBinaryString","getRootProps","getInputProps","isDragActive"],"mappings":";AAEA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;;AAEA,SAASC,UAAT,GAAsB;AACpB,MAAMC,MAAM,GAAGH,WAAW,CAAC,UAAAI,aAAa,EAAI;AAC1C,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,IAAAA,MAAM,CAACE,OAAP,GAAiB;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAN;AAAA,KAAjB;;AACAJ,IAAAA,MAAM,CAACK,OAAP,GAAiB;AAAA,aAAMF,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAN;AAAA,KAAjB;;AACAJ,IAAAA,MAAM,CAACM,MAAP,GAAgB,YAAM;AACpB;AACA,UAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAzB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACD,KAJD;;AAMAR,IAAAA,aAAa,CAACU,OAAd,CAAsB,UAAAC,IAAI;AAAA,aAAIV,MAAM,CAACW,kBAAP,CAA0BD,IAA1B,CAAJ;AAAA,KAA1B;AACD,GAZyB,EAYvB,EAZuB,CAA1B;;AADoB,qBAcgCd,WAAW,CAAC;AAACE,IAAAA,MAAM,EAANA;AAAD,GAAD,CAd3C;AAAA,MAcbc,YAda,gBAcbA,YAda;AAAA,MAcCC,aAdD,gBAcCA,aAdD;AAAA,MAcgBC,YAdhB,gBAcgBA,YAdhB;;AAgBpB,SACE,6CAASF,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFF,CADF;AAMD;;AAED,eAAehB,UAAf","sourcesContent":["\n\nimport React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\n\nfunction MyDropzone() {\n  const onDrop = useCallback(acceptedFiles => {\n    const reader = new FileReader()\n\n    reader.onabort = () => console.log('file reading was aborted')\n    reader.onerror = () => console.log('file reading has failed')\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      const binaryStr = reader.result\n      console.log(binaryStr)\n    }\n\n    acceptedFiles.forEach(file => reader.readAsBinaryString(file))\n  }, [])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      <p>Drag 'n' drop some files here, or click to select files</p>\n    </div>\n  )\n}\n\nexport default MyDropzone;"]},"metadata":{},"sourceType":"module"}